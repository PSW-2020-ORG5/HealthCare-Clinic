// <auto-generated />
using System;
using Health_Clinic_Web_App.Model.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Health_Clinic_Web_App.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20201110220516_ThirdMigration_AddedPublishedAndForeignKey")]
    partial class ThirdMigration_AddedPublishedAndForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Survey.AppReview", b =>
                {
                    b.Property<long>("AppReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Anonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<bool>("Publishable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Published")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReviewText")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AppReviewId");

                    b.HasIndex("PatientId");

                    b.ToTable("AppReviews");
                });

            modelBuilder.Entity("Model.Survey.SurveyResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("Kindness")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientModelId")
                        .HasColumnType("int");

                    b.Property<int>("Professionalism")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<int>("Security")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientModelId");

                    b.ToTable("SurveyResponse");
                });

            modelBuilder.Entity("Model.Users.PatientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Biography")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Jmbg")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentsName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PatientModel");
                });

            modelBuilder.Entity("Model.Survey.AppReview", b =>
                {
                    b.HasOne("Model.Users.PatientModel", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Survey.SurveyResponse", b =>
                {
                    b.HasOne("Model.Users.PatientModel", null)
                        .WithMany("SurveyResponses")
                        .HasForeignKey("PatientModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
