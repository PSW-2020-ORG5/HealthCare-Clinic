version: '3.8'

services:
  user_microservice:
    image: psw_usermicroservice
    build: 
      context: WEB_Backend/UserMicroservice
      dockerfile: Dockerfile.local
    ports:
      - "44395:80"
    volumes:
      - user_microservice_data:/var/lib/userdata/data
    restart: on-failure
    depends_on: 
      - db
    networks:
      - compose_network
  
  db:
    image: psw_mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      DATABASE_HOST: localhost
      DATABASE_PORT: 3307
      DATABASE_SCHEMA: HealthClinicDB
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: rootP@ssword
    volumes:
      - db_data:/var/lib/mysql
      - ./sql-scripts:/docker-entrypoint-initdb.d/
    restart: always
    networks:
      - compose_network
  
  api_gateway:
    image: psw_apigateway
    build: 
      context: WEB_Backend/APIGateway
      dockerfile: Dockerfile.local
    ports:
      - "44340:80"
    restart: on-failure
    depends_on: 
      - db
    networks:
      - compose_network

  client:
    image: psw_client
    build: 
      context: WEB_Frontend/web_frontend
      dockerfile: Dockerfile.local
    ports:
      - "8083:8080"
    restart: on-failure
    depends_on:
      - db
    networks:
      - compose_network

  psw_integrationadapters:
    image: psw_integrationadapters
    build:
      context: IntegrationAdapters\IntegrationAdapters\
      dockerfile: Dockerfile.local
    ports:
    - "8282:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:      
      - db
      - rabbitmq
    restart: on-failure
    networks:
      - compose_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      - compose_network

volumes:
  user_microservice_data:
  db_data:
  sql-scripts:

networks:
  compose_network:
    name: compose_network
    driver: bridge